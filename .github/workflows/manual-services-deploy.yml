name: Deploy services

on:
  workflow_dispatch:
    inputs:
      client:
        description: client
        type: boolean
      server:
        description: server
        type: boolean
      load-balancer:
        description: load-balancer
        type: boolean
      deploy-env:
        description: Environment
        type: choice
        options:
          - prod
          - stage
      servers-to-deploy:
        description: How many servers to start (for server and prod env only)
        default: 2

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy ${{ matrix.service.name }}

    strategy:
      matrix:
        service:
          - name: client
            run: ${{ inputs.client }}
          - name: server
            run: ${{ inputs.server }}
          - name: load-balancer
            run: ${{ inputs.load-balancer }}

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGES_USERNAME }}
          password: ${{ secrets.PACKAGES_TOKEN }}

      - name: Deploy ${{ matrix.service.name }}
        if: matrix.service.run
        uses: appleboy/ssh-action@v0.1.7
        env:
          REPOSITORY: ${{ github.repository }}
          APP_PATH: /app
          SOURCE_DIR: source-${{ matrix.service.name }}
          SERVERS_TO_START: ${{ inputs.servers-to-deploy }}
          DEPLOY_ENV: ${{ inputs.deploy-env }}
          GITHUB_BRANCH: ${{ github.ref_name }}
        with:
          host: ${{ inputs.deploy-env == 'prod' && secrets.PROD_HOST || secrets.STAGE_HOST }}
          username: ${{ inputs.deploy-env == 'prod' && secrets.PROD_USERNAME || secrets.STAGE_USERNAME }}
          password: ${{ inputs.deploy-env == 'prod' && secrets.PROD_PASSWORD || secrets.STAGE_PASSWORD }}
          envs: REPOSITORY,APP_PATH,SOURCE_DIR,SERVERS_TO_START,DEPLOY_ENV,GITHUB_BRANCH
          script: |
            git clone https://github.com/$REPOSITORY $APP_PATH/$SOURCE_DIR
            $APP_PATH/$SOURCE_DIR/deploy/scripts/update-${{ matrix.service.name }}.sh

  purge-cache:
    needs: deploy
    if: inputs.client

    name: Purge cloudflare cache
    runs-on: ubuntu-latest

    steps:
      - name: Purge cloudflare cache
        uses: nathanvaughn/actions-cloudflare-purge@v3.1.0
        with:
          cf_zone: ${{ secrets.CLOUDFLARE_ZONE }}
          cf_auth: ${{ secrets.CLOUDFLARE_AUTH_KEY }}
