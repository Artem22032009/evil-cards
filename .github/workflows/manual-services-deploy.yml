name: Manual services deploy

on: 
  workflow_dispatch:
    inputs:
      client:
        description: client
        type: boolean
      server:
        description: server
        type: boolean
      load-balancer:
        description: load-balancer
        type: boolean

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    name: Generate service matrix
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    
    steps:
      - name: Generate matrix
        id: generate-matrix
        run: |
          matrix=""
          for service in client server load-balancer
          do
            echo sh -c "echo ${{ inputs }} | | jq '.'"
          done
          echo "::set-output name=matrix::$matrix"

  deploy:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    
    name: Deploy ${{ matrix.service }}

    steps:
      - name: Reflect changes on remote server
        uses: appleboy/ssh-action@v0.1.7
        env:
            REPOSITORY: ${{ github.repository }}
            APP_PATH: /app
            SOURCE_DIR: source-${{ matrix.service }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: REPOSITORY,APP_PATH,SOURCE_DIR
          script: echo ${{ matrix.service }}
#           script: |
#             git clone https://github.com/$REPOSITORY $APP_PATH/$SOURCE_DIR
#             $APP_PATH/$SOURCE_DIR/deploy/scripts/update-${{ matrix.service }}.sh

  purge-cache:
    if: inputs.client
    name: Purge cloudflare cache
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - run: echo HI!

#     steps:
#       - name: Purge cloudflare cache
#         uses: nathanvaughn/actions-cloudflare-purge@v3.1.0
#         with:
#           cf_zone: ${{ secrets.CLOUDFLARE_ZONE }}
#           cf_auth: ${{ secrets.CLOUDFLARE_AUTH_KEY }}
