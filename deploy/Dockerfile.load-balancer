
###################################################################
# Stage 1: Install load-balancer dependencies                     #
###################################################################

FROM node:16-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /evil-cards

COPY apps/load-balancer apps/load-balancer
COPY packages ./packages
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

RUN yarn global add pnpm && pnpm --filter=@evil-cards/load-balancer... --frozen-lockfile install

###################################################################
# Stage 2: Build load-balancer                                    #
###################################################################

FROM node:16-alpine AS builder

WORKDIR /evil-cards
COPY . .
COPY --from=deps /evil-cards/node_modules ./node_modules

WORKDIR /evil-cards/apps/load-balancer
COPY --from=deps /evil-cards/apps/load-balancer/node_modules ./node_modules

RUN npm run build

###################################################################
# Stage 3: Extract minimal image from the build                   #
###################################################################

FROM node:16-alpine AS runner

WORKDIR /evil-cards
COPY --from=builder /evil-cards/node_modules ./node_modules

WORKDIR /evil-cards/apps/load-balancer
COPY --from=builder /evil-cards/apps/load-balancer/node_modules ./node_modules
COPY --from=builder /evil-cards/apps/load-balancer/dist ./dist
COPY --from=builder /evil-cards/apps/load-balancer/package.json ./package.json

EXPOSE 1337
ENV PORT 1337

CMD ["npm", "start"]
